
It looks like the istio-mixer-service-account does not have any workload identity. 

Any pod that needs to access GCP resources needs to have a GCP service account, a K8S service account and an IAM binding.

We should do this in terraform, similar to how the CNRM workload identity is provisioned. 

The K8S service account also needs this annotation, which can be added as an overlay in the operator CR. 
  gcloud iam service-accounts add-iam-policy-binding \
    --role=roles/iam.workloadIdentityUser \
    --member="serviceAccount:smcghee-11932-01-ops.svc.id.goog[istio-system/istio-mixer-service-account]" \
    istio-telemetry@smcghee-11932-01-ops.iam.gserviceaccount.com

    # manually done

https://cloud.google.com/monitoring/api/ref_v3/rest/v1/projects.dashboards

POST to:
https://monitoring.googleapis.com/v3/projects/$\{PROJECT_ID\}/dashboards

API explorer:
https://cloud.google.com/monitoring/api/ref_v3/rest/v1/projects.dashboards/create

export OAUTH_TOKEN=`gcloud beta auth application-default print-access-token`

cat anthos-service-mesh-workshop/infrastructure/ops/prod/ops_project/services-dashboard.json | \
curl -X POST -H "Authorization: Bearer $OAUTH_TOKEN" -H "Content-Type: application/json" \
https://monitoring.googleapis.com/v3/projects/${TF_VAR_ops_project_name}/dashboards
 -d 

https://monitoring.googleapis.com/v1/{parent}/dashboards

# Patch ops clusters 1 and 2 with telemetry write permission to stackdriver
for cluster in ${ops_gke_1_name} ${ops_gke_2_name}; do
  SRC="config/istio-controlplane/istio-shared-controlplane.yaml"
  DEST="tmp/$cluster/istio-controlplane/$(basename $SRC)"

  sed \
    -e "s/OPS_PROJECT/${ops_project_id}/g" \
    $SRC > $DEST
  
  # Update kustomization
  (cd $(dirname $DEST) && kustomize edit add resource $(basename $DEST))
done


test:

terraform init
