steps:
################################################################################################
# create destination rule to divide the service into two subsets - old and new
################################################################################################
- name: 'gcr.io/cloud-builders/gcloud'
  id: Add Subset
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
     sed -e "s/NEW_VERSION/${_NEW_VERSION}/g" -e "s/OLD_VERSION/${_OLD_VERSION}/g" -e "s/SVC_NAMESPACE/${_SVC_NAMESPACE}/g"  -e "s/SVC_NAME/${_SVC_NAME}/g"  ./dr-split.yaml.tpl > ./dr-split.yaml
- name: 'gcr.io/cloud-builders/kubectl'
  id: Apply DestinationRule
  args:
  - 'apply'
  - '-f'
  - './dr-split.yaml'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=${_OPS_CLUSTER_ZONE}'
  - 'CLOUDSDK_CONTAINER_CLUSTER=${_OPS_CLUSTER_NAME}'
- name: 'gcr.io/cloud-builders/gcloud'
  id: Sleep for 20 seconds
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
     sleep 20
################################################################################################
# update virtualservice to explicitly send 100% of traffic to old version
################################################################################################
- name: 'gcr.io/cloud-builders/gcloud'
  id: Generate 0/100 VirtualService
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
     sed "s/VERSION/${_OLD_VERSION}/g" -e "s/SVC_NAMESPACE/${_SVC_NAMESPACE}/g"  -e "s/SVC_NAME/${_SVC_NAME}/g" -e "s/SVC_PORT/${_SVC_PORT}/g"  ./vs-all.yaml.tpl > ./vs-0.yaml
- name: 'gcr.io/cloud-builders/kubectl'
  id: Apply 0/100 VirtualService
  args:
  - 'apply'
  - '-f'
  - './vs-0.yaml'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=${_OPS_CLUSTER_ZONE}'
  - 'CLOUDSDK_CONTAINER_CLUSTER=${_OPS_CLUSTER_NAME}'
###############################################################################################
# send 20% of traffic to new version
################################################################################################
- name: 'gcr.io/cloud-builders/gcloud'
  id: Generate 80/20 VirtualService
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
     sed -e "s/NEW_VERSION/${_NEW_VERSION}/g" -e "s/OLD_VERSION/${_OLD_VERSION}/g" -e "s/OLD_PERCENT/80/g" -e "s/NEW_PERCENT/20/g" -e "s/SVC_NAMESPACE/${_SVC_NAMESPACE}/g" -e "s/SVC_NAME/${_SVC_NAME}/g" -e "s/SVC_PORT/${_SVC_PORT}/g"   ./vs-split.yaml.tpl > ./vs-20.yaml
- name: 'gcr.io/cloud-builders/kubectl'
  id: Apply 80/20 VirtualService
  args:
  - 'apply'
  - '-f'
  - './vs-20.yaml'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=${_OPS_CLUSTER_ZONE}'
  - 'CLOUDSDK_CONTAINER_CLUSTER=${_OPS_CLUSTER_NAME}'
- name: 'gcr.io/cloud-builders/gcloud'
  id: 80/20 - Sleep
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
     sleep 15
################################################################################################
# send 50% of traffic to new version
################################################################################################
- name: 'gcr.io/cloud-builders/gcloud'
  id: Generate 50/50 VirtualService
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
     sed -e "s/NEW_VERSION/${_NEW_VERSION}/g" -e "s/OLD_VERSION/${_OLD_VERSION}/g" -e "s/OLD_PERCENT/50/g" -e "s/NEW_PERCENT/50/g" -e "s/SVC_NAMESPACE/${_SVC_NAMESPACE}/g" -e "s/SVC_NAME/${_SVC_NAME}/g" -e "s/SVC_PORT/${_SVC_PORT}/g"   ./vs-split.yaml.tpl > ./vs-50.yaml
- name: 'gcr.io/cloud-builders/kubectl'
  id: Apply 50/50 VirtualService
  args:
  - 'apply'
  - '-f'
  - './vs-50.yaml'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=${_OPS_CLUSTER_ZONE}'
  - 'CLOUDSDK_CONTAINER_CLUSTER=${_OPS_CLUSTER_NAME}'
- name: 'gcr.io/cloud-builders/gcloud'
  id: 50/50 - Sleep
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
     sleep 15
################################################################################################
# send 80% of traffic to new version
################################################################################################
- name: 'gcr.io/cloud-builders/gcloud'
  id: Generate 20/80 VirtualService
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
     sed -e "s/NEW_VERSION/${_NEW_VERSION}/g" -e "s/OLD_VERSION/${_OLD_VERSION}/g" -e "s/OLD_PERCENT/20/g" -e "s/NEW_PERCENT/80/g" -e "s/SVC_NAMESPACE/${_SVC_NAMESPACE}/g" -e "s/SVC_NAME/${_SVC_NAME}/g" -e "s/SVC_PORT/${_SVC_PORT}/g"   ./vs-split.yaml.tpl > ./vs-80.yaml
- name: 'gcr.io/cloud-builders/kubectl'
  id: Apply 20/80 VirtualService
  args:
  - 'apply'
  - '-f'
  - './vs-80.yaml'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=${_OPS_CLUSTER_ZONE}'
  - 'CLOUDSDK_CONTAINER_CLUSTER=${_OPS_CLUSTER_NAME}'
- name: 'gcr.io/cloud-builders/gcloud'
  id: 20/80 - Sleep
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
     sleep 15
################################################################################################
# send 100% of traffic to new version, removing old version from the VirtualService
################################################################################################
- name: 'gcr.io/cloud-builders/gcloud'
  id: Generate 0/100 VirtualService
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
     sed "s/VERSION/${_NEW_VERSION}/g" -e "s/SVC_NAMESPACE/${_SVC_NAMESPACE}/g"  -e "s/SVC_NAME/${_SVC_NAME}/g"  -e "s/SVC_PORT/${_SVC_PORT}/g" ./vs-all.yaml.tpl > ./vs-100.yaml
- name: 'gcr.io/cloud-builders/kubectl'
  id: Apply 0/100 VirtualService
  args:
  - 'apply'
  - '-f'
  - './vs-100.yaml'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=${_OPS_CLUSTER_ZONE}'
  - 'CLOUDSDK_CONTAINER_CLUSTER=${_OPS_CLUSTER_NAME}'
################################################################################################
#  cleanup - remove old subset from destination rule
################################################################################################
- name: 'gcr.io/cloud-builders/gcloud'
  id: Generate DestinationRule - Remove old version
  entrypoint: /bin/sh
  args:
  - '-c'
  - |
     sed "s/NEW_VERSION/${_NEW_VERSION}/g" -e "s/SVC_NAMESPACE/${_SVC_NAMESPACE}/g" -e "s/SVC_NAME/${_SVC_NAME}/g"  ./dr-all.yaml.tpl > ./dr-cleanup.yaml
- name: 'gcr.io/cloud-builders/kubectl'
  id: Apply DestinationRule - Remove old version
  args:
  - 'apply'
  - '-f'
  - './dr-cleanup.yaml'
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=${_OPS_CLUSTER_ZONE}'
  - 'CLOUDSDK_CONTAINER_CLUSTER=${_OPS_CLUSTER_NAME}'
substitutions:
    _OLD_VERSION: ""
    _NEW_VERSION: ""
    _OPS_CLUSTER_NAME: ""
    _OPS_CLUSTER_ZONE: ""
    _SVC_NAME: ""
    _SVC_NAMESPACE: ""
    _SVC_PORT: ""