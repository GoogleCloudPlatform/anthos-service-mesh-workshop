# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
timeout: 3600s
logsBucket: "gs://${PROJECT_ID}/logs/cloudbuild"
steps:
  - name: "gcr.io/kaniko-project/executor:v0.15.0"
    id: "build-installer-image"
    args:
      - --destination=gcr.io/${PROJECT_ID}/asm-installer
      - --cache=true
      - --cache-ttl=12h
  - name: gcr.io/${PROJECT_ID}/asm-installer
    id: "tf-host-project"
    dir: network/prod/host_project
    entrypoint: "bash"
    args:
      - "-xe"
      - "-c"
      - |
        terraform init
        terraform plan -out terraform.tfplan
        terraform apply -input=false terraform.tfplan
  - name: gcr.io/${PROJECT_ID}/asm-installer
    id: "tf-shared-vpc"
    dir: network/prod/shared_vpc
    entrypoint: "bash"
    args:
      - "-xe"
      - "-c"
      - |
        terraform init
        terraform plan -out terraform.tfplan
        terraform apply -input=false terraform.tfplan
  - name: gcr.io/${PROJECT_ID}/asm-installer
    id: "tf-ops-project"
    dir: ops/prod/ops_project
    entrypoint: "bash"
    args:
      - "-xe"
      - "-c"
      - |
        terraform init
        terraform plan -out terraform.tfplan
        terraform apply -input=false terraform.tfplan
  - name: gcr.io/${PROJECT_ID}/asm-installer
    id: "tf-ops-project-gke-clusters"
    dir: ops/prod/ops_gke
    entrypoint: "bash"
    args:
      - "-xe"
      - "-c"
      - |
        terraform init
        terraform plan -out terraform.tfplan
        terraform apply -input=false terraform.tfplan
  - name: gcr.io/${PROJECT_ID}/asm-installer
    id: "tf-ops-project-lb"
    dir: ops/prod/ops_lb
    entrypoint: "bash"
    args:
      - "-xe"
      - "-c"
      - |
        terraform init
        terraform plan -out terraform.tfplan
        terraform apply -input=false terraform.tfplan
  - name: gcr.io/${PROJECT_ID}/asm-installer
    id: "tf-app1-project"
    dir: apps/prod/app1/app1_project
    entrypoint: "bash"
    args:
      - "-xe"
      - "-c"
      - |
        terraform init
        terraform plan -out terraform.tfplan
        terraform apply -input=false terraform.tfplan
  - name: gcr.io/${PROJECT_ID}/asm-installer
    id: "tf-app1-gce"
    dir: apps/prod/app1/app1_gce
    entrypoint: "bash"
    args:
      - "-xe"
      - "-c"
      - |
        terraform init
        terraform plan -out terraform.tfplan
        terraform apply -input=false terraform.tfplan
  - name: gcr.io/${PROJECT_ID}/asm-installer
    id: "tf-app1-project-gke-clusters"
    dir: apps/prod/app1/app1_gke
    entrypoint: "bash"
    args:
      - "-xe"
      - "-c"
      - |
        terraform init
        terraform plan -out terraform.tfplan
        terraform apply -input=false terraform.tfplan
  - name: gcr.io/${PROJECT_ID}/asm-installer
    id: "tf-app2-project"
    dir: apps/prod/app2/app2_project
    entrypoint: "bash"
    args:
      - "-xe"
      - "-c"
      - |
        terraform init
        terraform plan -out terraform.tfplan
        terraform apply -input=false terraform.tfplan
  - name: gcr.io/${PROJECT_ID}/asm-installer
    id: "tf-app2-project-gke-clusters"
    dir: apps/prod/app2/app2_gke
    entrypoint: "bash"
    args:
      - "-xe"
      - "-c"
      - |
        terraform init
        terraform plan -out terraform.tfplan
        terraform apply -input=false terraform.tfplan
  - name: gcr.io/${PROJECT_ID}/asm-installer
    id: "tf-app3-project"
    dir: apps/prod/app3/app3_project
    entrypoint: "bash"
    args:
      - "-xe"
      - "-c"
      - |
        terraform init
        terraform plan -out terraform.tfplan
        terraform apply -input=false terraform.tfplan
  - name: gcr.io/${PROJECT_ID}/asm-installer
    id: "tf-app3-project-gke-clusters"
    dir: apps/prod/app3/app3_gke
    entrypoint: "bash"
    args:
      - "-xe"
      - "-c"
      - |
        terraform init
        terraform plan -out terraform.tfplan
        terraform apply -input=false terraform.tfplan
  - name: gcr.io/${PROJECT_ID}/asm-installer
    id: "tf-istio-prep"
    dir: ops/prod/istio_prep
    entrypoint: "bash"
    args:
      - "-xe"
      - "-c"
      - |
        terraform init
        terraform plan -out terraform.tfplan
        terraform apply -input=false terraform.tfplan
  - name: gcr.io/${PROJECT_ID}/asm-installer
    id: "tf-cloudbuild-ops"
    dir: ops/prod/cloudbuild
    entrypoint: "bash"
    args:
      - "-xe"
      - "-c"
      - |
        terraform init
        terraform plan -out terraform.tfplan
        terraform apply -input=false terraform.tfplan
  - name: gcr.io/${PROJECT_ID}/asm-installer
    id: "tf-k8s-repo"
    dir: ops/prod/k8s_repo
    entrypoint: "bash"
    args:
      - "-xe"
      - "-c"
      - |
        terraform init
        terraform plan -out terraform.tfplan
        terraform apply -input=false terraform.tfplan
